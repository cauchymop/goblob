buildscript {
    ext.kotlin_version = '1.3.20'
    repositories {
        jcenter()
        google()
        maven {
            url 'https://maven.fabric.io/public'
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.1'
        classpath 'com.google.gms:google-services:4.2.0'
        classpath 'io.fabric.tools:gradle:1.25.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {

    apply plugin: 'jacoco'

    repositories {
        jcenter()
        google()
        maven {
            url 'https://maven.google.com/'
        }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    ext {
        android_compile_version = 28
        android_min_sdk_version = 19

        appcompat_library_version = '1.0.2'
        play_services_games_version = '16.0.0'
        play_services_auth_version = '16.0.1'
        firebase_core_version = '16.0.6'

        guava_version = '25.1-android' // Upgrade Proguard config when guava version changes
        dagger_version = '2.13'
        espresso_version = '3.1.0-alpha4'
        butterknife_version = '10.0.0'
        crashlytics_version = '2.9.8'
        protobuf_version = '3.6.1'

        junit_version = '4.12'
        mockito_version = '2.8.9'
        truth_version = '0.42'
    }

    task codeCoverageReport(type: JacocoReport) {
        executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

        setSourceDirectories(files("goblobBase/src/main/java", "goblob/src/main/java"))
        setClassDirectories(files("goblobBase/build/classes/java/main/",
                "goblobBase/build/classes/kotlin/main/",
                "goblob/build/tmp/kotlin-classes/debug/com/cauchymop/goblob",
                "goblob/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/cauchymop/goblob"))
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, excludes: ['com/cauchymop/goblob/proto/**','**/*_*'])
        })

        reports {
            xml.enabled true
            xml.destination "${buildDir}/reports/jacoco/report.xml"
            html.enabled true
            html.destination "${buildDir}/reports/jacoco/report.html"
            csv.enabled false
        }
    }

    codeCoverageReport.dependsOn {
        subprojects*.test
    }
}
