apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'com.google.protobuf'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.6'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "com.google.guava:guava:${guava_version}"
    compile "com.google.dagger:dagger:${dagger_version}"
    compile 'com.google.protobuf:protobuf-java:3.6.1'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile "com.google.guava:guava-testlib:${guava_version}"
    testCompile "junit:junit:${junit_version}"
    testCompile "org.mockito:mockito-core:${mockito_version}"
    testCompile "com.google.truth:truth:0.42"
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

protobuf {
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.6.1'
    }
    generatedFilesBaseDir = "$projectDir/generated"
}

sourceSets {
    main.java.srcDirs += file("${protobuf.generatedFilesBaseDir}/main/java")
}


jacocoTestReport {
    reports {
        xml.enabled true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'com/cauchymop/goblob/proto/**')
        })
    }
}

/**
 * This task is a hack to allow Intellij to find Kotlin classes when compiling Tests.
 * This is to be called as an extra task in Intellij Run Configuration.
 * TODO: Remove this once handled properly by Intillij
 */
task copyTestClasses(type: Copy) {
    from "build/classes/kotlin"
    into "build/classes/java"
}

idea {
    module {
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/java")
    }
}

task annotateNotNull() << {
    ant.replaceregexp(match:'^(package .*)', replace:'\\1\nimport org.jetbrains.annotations.NotNull;\n', byline:true) {
        fileset(dir: 'generated/main/java/com/cauchymop/goblob/proto/', includes: 'PlayGameData.java')
    }
    ant.replaceregexp(match:'(public .*(String|cauchymop).* get)', replace:'@NotNull \\1', byline:true) {
        fileset(dir: 'generated/main/java/com/cauchymop/goblob/proto/', includes: 'PlayGameData.java')
    }
}

compileKotlin.dependsOn = [annotateNotNull]
annotateNotNull.dependsOn ':goblobBase:generateProto'
